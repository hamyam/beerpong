/**** FontHollow.h *****/

#ifndef  FontHollow_h
#define  FontHollow_h

const uint8_t FontHollowData[] =
{
	7,	// Font Width
	7,	// Font Height
	32,	// Font First Character
	96,	// Font Last Character


					B8(00000000),	// Char  
					B8(00000000),
					B8(00000000),
					B8(00000000),
					B8(00000000),
					B8(00000000),
					B8(00000000),

					B8(00111000),	// Char !
					B8(00101000),
					B8(00101000),
					B8(00101000),
					B8(00111000),
					B8(00101000),
					B8(00111000),

					B8(01111100),	// Char "
					B8(01010100),
					B8(01010100),
					B8(01111100),
					B8(00000000),
					B8(00000000),
					B8(00000000),

					B8(01111100),	// Char #
					B8(11010110),
					B8(10000010),
					B8(11010110),
					B8(10000010),
					B8(11010110),
					B8(01111100),	

					B8(11011000),// Char $
					B8(10001000),
					B8(10111000),
					B8(10001000),
					B8(11101000),
					B8(10001000),
					B8(11011000),

					B8(11000110),	// Char %
					B8(11001100),
					B8(00011000),
					B8(00110000),
					B8(01100110),
					B8(11000110),
					B8(00000000),

					B8(11111000),	// Char &
					B8(10001000),
					B8(10101110),
					B8(11011010),
					B8(10100110),
					B8(10001010),
					B8(11111110),

					B8(00111000),	// Char '
					B8(00101000),
					B8(01010000),
					B8(01110000),
					B8(00000000),
					B8(00000000),
					B8(00000000),

					B8(00011100),	// Char (
					B8(00101000),
					B8(00101000),
					B8(00101000),
					B8(00101000),
					B8(00101000),
					B8(00011100),

					B8(01110000),	// Char )
					B8(00101000),
					B8(00101000),
					B8(00101000),
					B8(00101000),
					B8(00101000),
					B8(01110000),

					B8(00000000),	// Char *
					B8(01111100),
					B8(01010100),
					B8(01101100),
					B8(01010100),
					B8(01111100),
					B8(00000000),

					B8(00000000),	// Char +
					B8(00111000),
					B8(01101100),
					B8(01000100),
					B8(01101100),
					B8(00111000),
					B8(00000000),

					B8(00000000),	// Char ,
					B8(00000000),
					B8(00000000),
					B8(01110000),
					B8(01010000),
					B8(01010000),
					B8(01110000),

					B8(00000000),	// Char -
					B8(00000000),
					B8(01111100),
					B8(01000100),
					B8(01111100),
					B8(00000000),
					B8(00000000),

					B8(00000000),	// Char .
					B8(00000000),
					B8(00000000),
					B8(00000000),
					B8(01110000),
					B8(01010000),
					B8(01110000),

					B8(00000110),	// Char /
					B8(00001010),
					B8(00010100),
					B8(00101000),
					B8(01010000),
					B8(10100000),
					B8(11000000),

					B8(01110000),	// Char 0
					B8(10001000),
					B8(10101000),
					B8(10101000),
					B8(10101000),
					B8(10001000),
					B8(01110000),

					B8(11110000),	// Char 1
					B8(10010000),
					B8(11010000),
					B8(01010000),
					B8(01010000),
					B8(01010000),
					B8(01110000),

					B8(11110000),	// Char 2
					B8(10001000),
					B8(01101000),
					B8(10001000),
					B8(10110000),
					B8(10001000),
					B8(11111000),

					B8(11110000),	// Char 3
					B8(10001000),
					B8(11101000),
					B8(10001000),
					B8(11101000),
					B8(10001000),
					B8(1111100),

					B8(11111000),	// Char 4
					B8(10101000),
					B8(10101000),
					B8(10001000),
					B8(11101000),
					B8(00101000),
					B8(00111000),

					B8(11111000),	// Char 5
					B8(10001000),
					B8(10110000),
					B8(10001000),
					B8(11101000),
					B8(10001000),
					B8(1111100),

					B8(0111100),	// Char 6
					B8(10001000),
					B8(10111000),
					B8(10001000),
					B8(10101000),
					B8(10001000),
					B8(11111000),

					B8(11111000),	// Char 7
					B8(10001000),
					B8(11101000),
					B8(00101000),
					B8(00101000),
					B8(00101000),
					B8(00111000),

					B8(11111000),	// Char 8
					B8(10001000),
					B8(10101000),
					B8(10001000),
					B8(10101000),
					B8(10001000),
					B8(11111000),

					B8(11111000),	// Char 9
					B8(10001000),
					B8(10101000),
					B8(10001000),
					B8(11101000),
					B8(10001000),
					B8(11111000),

					B8(00000000),	// Char :
					B8(01110000),
					B8(01010000),
					B8(01110000),
					B8(01010000),
					B8(01110000),
					B8(00000000),

					B8(00000000),	// Char ;
					B8(00000000),
					B8(01110000),
					B8(01010000),
					B8(01110000),
					B8(01010000),
					B8(01010000),

					B8(00011100),	// Char <
					B8(00101000),
					B8(01010000),
					B8(10100000),
					B8(01010000),
					B8(00101000),
					B8(00011100),

					B8(00000000),	// Char =
					B8(01111000),
					B8(01001000),
					B8(01111000),
					B8(01001000),
					B8(01111000),
					B8(00000000),

					B8(11100000),	// Char >
					B8(01010000),
					B8(00101000),
					B8(00010100),
					B8(00101000),
					B8(01010000),
					B8(01110000),

					B8(11111000),	// Char ?
					B8(10001000),
					B8(11101000),
					B8(01001000),
					B8(01111000),
					B8(01010000),
					B8(01110000),

					B8(11111100),	// Char @
					B8(10000100),
					B8(10110100),
					B8(10100100),
					B8(10111100),
					B8(10000100),
					B8(11111100),

					B8(11111000),	// Char A
					B8(10001000),
					B8(10101000),
					B8(10001000),
					B8(10101000),
					B8(10101000),
					B8(11111000),

					B8(11111000),	// Char B
					B8(10001000),
					B8(10101000),
					B8(10010000),
					B8(10101000),
					B8(10001000),
					B8(11111000),

					B8(11111000),	// Char C
					B8(10001000),
					B8(10111000),
					B8(10100000),
					B8(10111000),
					B8(10001000),
					B8(1111100),

					B8(11110000),	// Char D
					B8(10001000),
					B8(10101000),
					B8(10101000),
					B8(10101000),
					B8(10001000),
					B8(11110000),

					B8(11111000),	// Char E
					B8(10001000),
					B8(10111000),
					B8(10001000),
					B8(10111000),
					B8(10001000),
					B8(11111000),

					B8(11111000),	// Char F
					B8(10001000),
					B8(10111000),
					B8(10001000),
					B8(10111000),
					B8(10100000),
					B8(11100000),

					B8(11111000),	// Char G
					B8(10001000),
					B8(10111000),
					B8(10101000),
					B8(10101000),
					B8(10001000),
					B8(11111000),

					B8(11111000),	// Char H
					B8(10101000),
					B8(10101000),
					B8(10001000),
					B8(10101000),
					B8(10101000),
					B8(11111000),

					B8(11111000),	// Char I
					B8(10001000),
					B8(11011000),
					B8(01010000),
					B8(11011000),
					B8(10001000),
					B8(11111000),

					B8(00111000),	// Char J
					B8(00101000),
					B8(00101000),
					B8(11101000),
					B8(10101000),
					B8(10001000),
					B8(11111000),

					B8(11111000),	// Char K
					B8(10101000),
					B8(10101000),
					B8(10010000),
					B8(10101000),
					B8(10101000),
					B8(11111000),

					B8(11100000),	// Char L
					B8(10100000),
					B8(10100000),
					B8(10100000),
					B8(10111000),
					B8(10001000),
					B8(11111000),

					B8(11111110),	// Char M
					B8(10000010),
					B8(10101010),
					B8(10101010),
					B8(10101010),
					B8(10101010),
					B8(11111110),

					B8(11111000),	// Char N
					B8(10001000),
					B8(10101000),
					B8(10101000),
					B8(10101000),
					B8(10101000),
					B8(11111000),

					B8(11111000),	// Char O
					B8(10001000),
					B8(10101000),
					B8(10101000),
					B8(10101000),
					B8(10001000),
					B8(11111000),

					B8(11111000),	// Char P
					B8(10001000),
					B8(10101000),
					B8(10001000),
					B8(10111000),
					B8(10100000),
					B8(11100000),

					B8(11111000),	// Char Q
					B8(10001000),
					B8(10101000),
					B8(10101000),
					B8(10101000),
					B8(10001000),
					B8(11110100),

					B8(11111000),	// Char R
					B8(10001000),
					B8(10101000),
					B8(10011000),
					B8(10101000),
					B8(10101000),
					B8(11111000),

					B8(11111000),	// Char S
					B8(10001000),
					B8(10111000),
					B8(10001000),
					B8(11101000),
					B8(10001000),
					B8(1111100),

					B8(11111000),	// Char T
					B8(10001000),
					B8(11011000),
					B8(01010000),
					B8(01010000),
					B8(01010000),
					B8(01110000),

					B8(11111000),	// Char U
					B8(10101000),
					B8(10101000),
					B8(10101000),
					B8(10101000),
					B8(10001000),
					B8(11111000),

					B8(11111000),	// Char V
					B8(10101000),
					B8(10101000),
					B8(10101000),
					B8(10101000),
					B8(01010000),
					B8(01110000),

					B8(11111110),	// Char W
					B8(10101010),
					B8(10101010),
					B8(10101010),
					B8(10101010),
					B8(10000010),
					B8(11111110),

					B8(11111000),	// Char X
					B8(10101000),
					B8(10101000),
					B8(01010000),
					B8(10101000),
					B8(10101000),
					B8(11111000),

					B8(11111000),	// Char Y
					B8(10101000),
					B8(10101000),
					B8(10001000),
					B8(11011000),
					B8(01010000),
					B8(01110000),

					B8(11111000),	// Char Z
					B8(10001000),
					B8(11101000),
					B8(10001000),
					B8(10111000),
					B8(10001000),
					B8(11111000),

					B8(01111100),	// Char [
					B8(01000100),
					B8(01011100),
					B8(01010000),
					B8(01011100),
					B8(01000100),
					B8(01111100),

					B8(11000000),	// Char backslash
					B8(10100000),
					B8(01010000),
					B8(00101000),
					B8(00010100),
					B8(00001010),
					B8(00000110),

					B8(01111100),	// Char ]
					B8(01000100),
					B8(01110100),
					B8(00010100),
					B8(01110100),
					B8(01000100),
					B8(01111100),

					B8(00010000),	// Char ^
					B8(00111000),
					B8(01101100),
					B8(11000110),
					B8(00000000),
					B8(00000000),
					B8(00000000),

					B8(00000000),	// Char _
					B8(00000000),
					B8(00000000),
					B8(00000000),
					B8(00000000),
					B8(00000000),
					B8(11111110),

					B8(00110000),	// Char `
					B8(00110000),
					B8(00011000),
					B8(00000000),
					B8(00000000),
					B8(00000000),
					B8(00000000)
			};

#endif